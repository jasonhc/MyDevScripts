# Show readable content (only some method call filtered by regexp) of .trace file generated by android profiler
# Usage: show-method-trace-xml <trace file> <thread name> <filter keyword>(extended regexp)
# Example: show-method-trace foo-bar.trace "\.(stv|letv)\."
# Note: regexp in "filter keyword", "\." should be "\\.", and must use single quotes

if [ $# -lt 3 ]; then
  echo "Usage: show-method-trace-xml <trace file> <thread name> <filter keyword>(extended regexp)"
  exit 1
fi

traceFile=$1
threadName=$2
keyword=$3

#cat $1 | awk -v threadName=$threadName \
~/android_sdk_mac/platform-tools/dmtracedump -ho $traceFile | awk -v threadName=$threadName -v keyword=$keyword \
  '
  function encoding_method_name(name) {
    gsub(/&/, "_", name)
    gsub(/</, "_", name)
    gsub(/>/, "_", name)
    gsub(/\$/, "_", name)
    return name
  }
  BEGIN {
    print "<?xml version=\"1.0\" encoding=\"utf-8\"?>"
    print "<trace>"
    threadId=""
    pendingMethodLine=""
    thisMethodLine=""
    prevMethodType=""
    prevMethodLevel=0
    # print "keyword: ", keyword
  }
  {
    if (threadId == "") {
      if (NF == 2 && $2 == threadName) {
        threadId = $1
      }
    } else if (NF >= 6 && $1 == threadId) {

      if (match($4, keyword)) {
        isPendingThisLine=0

        match($4, /(\.+)(.+)/, m)
        thisMethodLevel=length(m[1])
        thisMethodType=$2

        if (thisMethodType == "ent") {
          isPendingThisLine=1
          formatStr="%*s<%s>"
          thisMethodLine = sprintf(formatStr, thisMethodLevel, "", encoding_method_name(m[2]))
        } else if (thisMethodType == "xit") {
          if (prevMethodType == "ent" && prevMethodLevel == thisMethodLevel) {
            # print ">>> sub: ", pendingMethodLine
            sub(">", " />", pendingMethodLine)
            thisMethodLine=""
          } else {
            formatStr="%*s</%s>"
            thisMethodLine = sprintf(formatStr, thisMethodLevel, "", encoding_method_name(m[2]))
          }
        }

        prevMethodLevel=thisMethodLevel
        prevMethodType=thisMethodType

        if (pendingMethodLine != "") {
          print pendingMethodLine
          pendingMethodLine = ""
        }
        if (isPendingThisLine == 1) {
          pendingMethodLine = thisMethodLine
          # print ">>> set pendingMethodLine: "+pendingMethodLine
        } else {
          if (thisMethodLine != "") {
            print thisMethodLine
          }
        }
      }
    }
  }
  END {
    print "</trace>"
  }
  '
